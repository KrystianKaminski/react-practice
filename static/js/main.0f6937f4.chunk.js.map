{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0f6937f4.chunk.js","sourcesContent":["import React, {\n    Component\n} from 'react'\n\nimport axios from 'axios'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ?\n                    (contact = action.payload)\n                    : contact)\n            }\n        default:\n            return state\n    }\n}\n\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action =>\n            this.setState(state => reducer(state, action))\n    }\n\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n        this.setState({\n            contacts: res.data\n        })\n    }\n\n    render() {\n        return (<Context.Provider value={\n            this.state\n        } > {\n                this.props.children\n            }\n        </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            dispatch({\n                type: 'DELETE_CONTACT',\n                payload: id\n            })\n\n        } catch (e) {\n            // Don't do that with real database\n\n            dispatch({\n                type: 'DELETE_CONTACT',\n                payload: id\n            })\n        }\n\n    }\n\n    render() {\n\n        const { id, name, email, phone } = this.props.contact\n        const { showContactInfo } = this.state\n\n\n        return (\n\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}\n                                <i\n                                    className=\"fas fa-sort-down\"\n                                    style={{\n                                        cursor: 'pointer'\n                                    }}\n                                    onClick={() => this.setState({\n                                        showContactInfo: !this.state.showContactInfo\n                                    })}\n                                />\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'red'\n                                    }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem'\n                                        }}\n                                    />\n                                </Link>\n\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email:{email}</li>\n                                    <li className=\"list-group-item\">Phone:{phone}</li>\n                                </ul>\n                            )\n                                :\n                                null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n\n    render() {\n\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label\n                htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">\n                {error}\n            </div>}\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({\n        [e.target.name]: e.target.value\n    })\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault()\n\n        const { name, email, phone } = this.state\n\n        // Check for Errors\n        if (name === '') {\n            this.setState({\n                errors: {\n                    name: 'Name is required'\n                }\n            })\n            return\n        }\n\n        if (email === '') {\n            this.setState({\n                errors: {\n                    email: 'Email is required'\n                }\n            })\n            return\n        }\n\n        if (phone === '') {\n            this.setState({\n                errors: {\n                    phone: 'Phone is required'\n                }\n            })\n            return\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        dispatch({\n            type: 'ADD_CONTACT',\n            payload: res.data\n        })\n\n\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className='card mb-3'>\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(this, dispatch)}\n                                >\n                                    <TextInputGroup\n                                        label='Name'\n                                        name='name'\n                                        placeholder='Enter Name'\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label='Email'\n                                        name='email'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label='Phone'\n                                        name='phone'\n                                        placeholder='Enter Phone'\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n        const contact = res.data\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = (e) => this.setState({\n        [e.target.name]: e.target.value\n    })\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault()\n\n        const { name, email, phone } = this.state\n\n        // Check for Errors\n        if (name === '') {\n            this.setState({\n                errors: {\n                    name: 'Name is required'\n                }\n            })\n            return\n        }\n\n        if (email === '') {\n            this.setState({\n                errors: {\n                    email: 'Email is required'\n                }\n            })\n            return\n        }\n\n        if (phone === '') {\n            this.setState({\n                errors: {\n                    phone: 'Phone is required'\n                }\n            })\n            return\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\n\n        dispatch({\n            type: 'UPDATE_CONTACT',\n            payload: res.data\n        })\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className='card mb-3'>\n                            <div className=\"card-header\">\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(this, dispatch)}\n                                >\n                                    <TextInputGroup\n                                        label='Name'\n                                        name='name'\n                                        placeholder='Enter Name'\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label='Email'\n                                        name='email'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label='Phone'\n                                        name='phone'\n                                        placeholder='Enter Phone'\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Update Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\n\nconst Header = (props) => {\n    const { branding } = props\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\" /> Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\" /> Add\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\" /> About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\n\nexport default Header","import React from 'react'\n\nexport default (props) => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => this.setState({\n                title: data.title,\n                body: data.body\n            }))\n    }\n\n\n    render() {\n        const { title, body } = this.state\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header\n              branding='Contact Manager'\n            />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}